<!DOCTYPE html>
<html lang="ko">
  <%- include('include/include', { title: '로그인' })%>
  <body>
    <h1>로그인</h1>
    <!-- 
      [로그인] 버튼을 클릭하면 profile.ejs에서 특정 유저 정보를 보여주어야 하기 때문에 
      userid 정보를 value에 저장(POST /user/signin 요청의 응답을 받은 후 수행)하여
      폼(input)이 보이지 않도록 hidden 처리함
    -->
    <form name="form_info" action="/user/profile" method="POST">
      <input type="hidden" name="userid" />
    </form>

    <form name="form_login">
      <label for="userid">ID</label>
      <input id="userid" type="text" name="userid" required /><br />
      <label for="password">Password</label>
      <input id="password" type="password" name="pw" required /><br />
      <button type="button" onclick="login();">Login</button>
    </form>

    <!-- DONE: href 속성값 설정하기 -->
    <a href="/user/signup">Register</a>

    <script>
      // DONE: [Login] 버튼 클릭시 서버에 로그인 요청하기
      // POST /user/signin
      async function login() {
        const form = document.forms["form_login"];

        if (!form.checkValidity()) {
          form.reportValidity();
          return;
        }

        const response = await axios({
          method: "POST",
          url: "/user/signin",
          data: {
            userid: form.userid.value,
            password: form.password.value,
          },
        });

        console.log(response);

        if (response) {
          alert("로그인 성공");
          const formInfo = document.forms["form_info"];
          console.log(formInfo);
          formInfo.userid.value = form.userid.value; // formInfo의 숨겨진 input에 같이 담아 제출
          formInfo.submit(); // form 제출/ <button type="submit"> 을 누른 것과 동일한 효과
          // forms["form_login"] 요소의 action, method 속성값에 의해
          // POST /user/profile 요청을 수행할 수 있게 함
        } else {
          alert("로그인 실패");
          formInfo.reset(); // form 초기화 (제출 안함))
        }

        console.log("sigin >>> ", data);
        // 로그인 성공 시 profile 페이지로 이동

        document.location.href = "/user/profile";
      }
    </script>
  </body>
</html>
